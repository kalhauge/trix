#!/usr/bin/env bash
function print_usage () {
    cat <<-EOF
trix [--eval <expr> | --expand <expr>]

# Commands
-e --eval:    evaluate an expression
-x --expand:  expand a query

# Utils
-h --help: to display this help message
EOF
}

LOCALDIR=$(dirname $0)

function nix_exec () {
    file=$1
    shift
    nix-instantiate --eval "$LOCALDIR/$file" "$@"
}

function trix_expand () {
    list="$(dots_to_aterm_list $1)"
    result=$(nix_exec trix-expand.nix --arg path "$list" 2> /dev/null)
    succ=$?
    if [[ "$succ" == "0" ]]; then
        if [[ $1 ]]; then pre="$1."; else pre=""; fi
        for i in $(from_aterm_list "$result"); do 
            echo "$pre$i"
        done
    else
        end="${1##*.}"
        front="${1%.*}"
        if [[ "$front" != "$end" ]]; then
            trix_expand $front | grep -e "$end"
        else
            trix_expand | grep -e "$end"
        fi
    fi
}

function trix_eval () {
    list="$(dots_to_aterm_list $1)"
    nix_exec trix-eval.nix --arg path "$list"
}

function dots_to_aterm_list () {
    IFS='.' read -ra ITEMS <<< "$1"
    echo -n "[ "
    for i in "${ITEMS[@]}"; do
        echo -n "\"$i\" "
    done
    echo -n "]"
}

# Can't use if including spaces
function from_aterm_list () {
    if [[ "$1" != "[ ]" ]]; then
        values=${1:2:-2}
        echo ${values//\"/}
    fi
}

## parser
while [[ $# > 0 ]]; do
    key=$1
    shift
    case $key in
        -h|--help)
            print_usage
            exit
        ;;
        -x|--expand)
            CMD="expand"
            EXPAND="$1"
            shift
        ;;
        -e|--eval)
            CMD="eval"
            EVAL="$1"
            shift
        ;;
    esac
done

case $CMD in 
    expand) trix_expand $EXPAND ;;
    eval) trix_eval $EVAL ;;
esac
